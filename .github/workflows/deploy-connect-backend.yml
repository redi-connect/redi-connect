name: Deploy backend webapp

on:
  push:
    branches:
      - master
      - salesforce-integration
      - infra/eric-christos-greek-god-working-on-infra

#    paths:
#      - 'apps/nestjs-api/**'
#      - '.github/workflows/deploy-connect-backend.yml'

jobs:
  deploy-staging:
    #    TODO uncomment when you merge on master
    #    if: contains(github.ref, 'heads/master') # we want to apply the tf changes only on the `master` branch
    environment:
      name: staging
      url: https://api-staging-redos.azurewebsites.net
    runs-on: ubuntu-latest
    env:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.REGISTRY_NAME }}.azurecr.io
      AZURE_IMAGE_NAME_WITH_SHA_TAG: ${{ secrets.REGISTRY_NAME }}.azurecr.io/red-platform-backend:${{ github.sha }}
      AZURE_IMAGE_NAME_WITH_LATEST_TAG: ${{ secrets.REGISTRY_NAME }}.azurecr.io/red-platform-backend:latest

    steps:
      - uses: actions/checkout@master

      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure container registry authentication
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          DOCKER_BUILDKIT=1 docker build -t ${{ env.AZURE_IMAGE_NAME_WITH_SHA_TAG }} -t ${{ env.AZURE_IMAGE_NAME_WITH_LATEST_TAG }} .
          docker push ${{ env.AZURE_IMAGE_NAME_WITH_SHA_TAG }}
          docker push ${{ env.AZURE_IMAGE_NAME_WITH_LATEST_TAG }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: api-staging-redos
          images: ${{ env.AZURE_IMAGE_NAME_WITH_LATEST_TAG }}
          # app-settings: |
          #   NX_DEV_MODE_EMAIL_RECIPIENT=eric@binarylights.com
          #   NX_DAEMON=false
          #   NX_AWS_REGION=eu-west-1
          #   NX_EMAILER_AWS_REGION=eu-west-1
          #   NX_SALESFORCE_API_LOGIN_URL=https://test.salesforce.com
          #   NX_JWT_SECRET=${{ secrets.NX_JWT_SECRET }}
          #   NX_AWS_ACCESS_KEY_ID=${{ secrets.NX_AWS_ACCESS_KEY_ID }}
          #   NX_AWS_SECRET_ACCESS_KEY=${{ secrets.NX_AWS_SECRET_ACCESS_KEY }}
          #   NX_EMAILER_AWS_ACCESS_KEY=${{ secrets.NX_EMAILER_AWS_ACCESS_KEY }}
          #   NX_EMAILER_AWS_SECRET_KEY=${{ secrets.NX_EMAILER_AWS_SECRET_KEY }}
          #   NX_SALESFORCE_API_USERNAME=${{ secrets.NX_SALESFORCE_API_USERNAME }}
          #   NX_SALESFORCE_API_PASSWORD=${{ secrets.NX_SALESFORCE_API_PASSWORD }}
          #   NX_SALESFORCE_API_SECURITY_TOKEN=${{ secrets.NX_SALESFORCE_API_SECURITY_TOKEN }}
          #   NX_SALESFORCE_API_CLIENT_ID=${{ secrets.NX_SALESFORCE_API_CLIENT_ID }}
          #   NX_SALESFORCE_API_CLIENT_SECRET=${{ secrets.NX_SALESFORCE_API_CLIENT_SECRET }}

      - name: Configure env. vars to be passed to the Docker container running the backend
        uses: azure/appservice-settings@v1
        with:
          app-name: api-staging-redos
          app-settings-json: |
            [
              { "name": "NX_DEV_MODE_EMAIL_RECIPIENT",
                "value": "eric@binarylights.com"
              },
              { "name": "NX_DAEMON",
                "value": "false"
              },
              { "name": "NX_AWS_REGION",
                "value": "eu-west-1"
              },
              { "name": "NX_EMAILER_AWS_REGION",
                "value": "eu-west-1"
              },
              { "name": "NX_SALESFORCE_API_LOGIN_URL",
                "value": "https://test.salesforce.com"
              },
              { "name": "NX_JWT_SECRET",
                "value": "${{ secrets.NX_JWT_SECRET }}"
              },
              { "name": "NX_AWS_ACCESS_KEY_ID",
                "value": "${{ secrets.NX_AWS_ACCESS_KEY_ID }}"
              },
              { "name": "NX_AWS_SECRET_ACCESS_KEY",
                "value": "${{ secrets.NX_AWS_SECRET_ACCESS_KEY }}"
              },
              { "name": "NX_EMAILER_AWS_ACCESS_KEY",
                "value": "${{ secrets.NX_EMAILER_AWS_ACCESS_KEY }}"
              },
              { "name": "NX_EMAILER_AWS_SECRET_KEY",
                "value": "${{ secrets.NX_EMAILER_AWS_SECRET_KEY }}"
              },
              { "name": "NX_SALESFORCE_API_USERNAME",
                "value": "${{ secrets.NX_SALESFORCE_API_USERNAME }}"
              },
              { "name": "NX_SALESFORCE_API_PASSWORD",
                "value": "${{ secrets.NX_SALESFORCE_API_PASSWORD }}"
              },
              { "name": "NX_SALESFORCE_API_SECURITY_TOKEN",
                "value": "${{ secrets.NX_SALESFORCE_API_SECURITY_TOKEN }}"
              },
              { "name": "NX_SALESFORCE_API_CLIENT_ID",
                "value": "${{ secrets.NX_SALESFORCE_API_CLIENT_ID }}"
              },
              { "name": "NX_SALESFORCE_API_CLIENT_SECRET",
                "value": "${{ secrets.NX_SALESFORCE_API_CLIENT_SECRET }}"
              }
            ]

      - name: Azure logout
        run: |
          az logout

  deploy-production:
    #    TODO uncomment when you merge on master
    #    if: contains(github.ref, 'heads/master') # we want to apply the tf changes only on the `master` branch
    needs: [deploy-staging]
    environment:
      name: production
      url: https://api-prod-redos.azurewebsites.net
    runs-on: ubuntu-latest
    env:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.REGISTRY_NAME }}.azurecr.io
      AZURE_IMAGE_NAME_WITH_SHA_TAG: ${{ secrets.REGISTRY_NAME }}.azurecr.io/red-platform-backend:${{ github.sha }}
      AZURE_IMAGE_NAME_WITH_LATEST_TAG: ${{ secrets.REGISTRY_NAME }}.azurecr.io/red-platform-backend:latest

    steps:
      - uses: actions/checkout@master

      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure container registry authentication
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build -t ${{ env.AZURE_IMAGE_NAME_WITH_SHA_TAG }} -t ${{ env.AZURE_IMAGE_NAME_WITH_LATEST_TAG }} .
          docker push ${{ env.AZURE_IMAGE_NAME_WITH_SHA_TAG }}
          docker push ${{ env.AZURE_IMAGE_NAME_WITH_LATEST_TAG }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: api-prod-redos
          images: ${{ env.AZURE_IMAGE_NAME_WITH_LATEST_TAG }}

      - name: Azure logout
        run: |
          az logout
